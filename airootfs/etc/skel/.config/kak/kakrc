source "%val{config}/plugins/plug.kak/rc/plug.kak"
plug "andreyorst/plug.kak" noload
plug "occivink/kakoune-sudo-write" %{ alias global sw sudo-write }
plug "base16-project/base16-kakoune" theme config %{
	colorscheme base16-heetch
}
plug "alexherbo2/surround.kak" %{
	map global normal <c-]> ":enter-user-mode surround<ret>"
}
plug "alexherbo2/auto-pairs.kak" %{ enable-auto-pairs }
plug "andreyorst/smarttab.kak" %{
	hook global BufCreate .* %{
		smarttab
		editorconfig-load
		set buffer aligntab false
		autoconfigtab
	}
}
plug "leperdu/kakboard" %{ hook global WinCreate .* %{ kakboard-enable } }
plug "kak-lsp/kak-lsp" do %{ cargo install --locked --force --path . } config %{
	set buffer lsp_config %{
		[language.clojure]
		filetypes = ["clojure"]
		roots = ["project.clj", "deps.edn", ".git/"]
		command = "clojure-lsp"

		[language.c_cpp]
		filetypes = ["c", "cpp"]
		roots = ["compile_commands.json", ".git/"]
		command = "clangd"
	}
	hook global WinSetOption filetype=(clojure) %{
		lsp-enable-window
	}
}
plug "alexherbo2/alacritty.kak"

# initialize kampliment, for remote control
evaluate-commands %sh{ kamp init -a }
map global user g ":connect terminal-popup kamp-grep<ret>" -docstring "grep files…"
map global user f ":connect terminal-popup kamp-files<ret>" -docstring "find files…"

# sorry clippy
set global ui_options terminal_assistant=none
set global tabstop 2

# format C/C++ files
hook global WinSetOption filetype=(c|cpp) %{ set window formatcmd clang-format }
hook global BufWritePre .*\.(c|cpp)$ %{ format }
